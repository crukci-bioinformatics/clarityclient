Spring Configuration

  The main Spring configuration file for the client is:

+---
/org/cruk/genologics/api/genologics-client-context.xml
+---

  Add this file to your Spring application context path. If you wish to use
the caching feature too, you'll also need to add:

+---
/org/cruk/genologics/api/genologics-cache-context.xml
+---

  See the {{{./caching.html}caching page}} for more information on using
the cache.

  <<<genologics-client-context.xml>>> and
<<<genologics-cache-context.xml>>> are provided in the client's JAR file.

  One <<must>> define the bean <<<genologicsAPI>>> in the client program's XML
configuration files or a Spring <<<@Configuration>>> annotated class from
release 2.24.14 of the client. It has been found that overriding the default
definition in <<<genologics-client-context.xml>>> causes problems with Spring
Boot when the bean is overridden to initialise with properties and so forth.

  In XML configuration, the line to add is (with optional initialisation
properties in <apiCredentials>):

+---
<bean id="genologicsAPI" parent="genologicsAPIBase">
    <constructor-arg ref="apiCredentials"/>
</bean>
+--- 

  In Spring annotation configuration, autowiring is correct for the normal
bean initialisation. As such, one needs to add the bean as:

+---
@Configuration
@ImportResource({
    "classpath:/org/cruk/genologics/api/genologics-client-context.xml",
    "classpath:/org/cruk/genologics/api/genologics-cache-context.xml"
})
public class MyClarityProgramConfiguration
{
    @Bean
    public GenologicsAPI genologicsAPI()
    {
        return new GenologicsAPIImpl();
    }
}
+---

  Initialisation of the bean using properties or the setter methods can be
done in this method too before the object is returned, or done with a
<<<@PostConstruct>>> annotated method.
